apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply from: "$project.rootDir/tools/script-findbugs.gradle"
apply from: "$project.rootDir/tools/script-lint.gradle"

android {
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion
  defaultConfig {
    applicationId "com.century.weather"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.compileSdkVersion
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    jackOptions {
      enabled true
    }
  }

  signingConfigs {
    debug {
      keyAlias 'ssmaintenance-debug'
      keyPassword 'JwsJoHw9ziFmJn[K'
      storePassword 'JwsJoHw9ziFmJn[K'
      storeFile file('../keystore/debug.jks')
    }

    release {
      keyAlias 'ssmaintenance-release'
      keyPassword 'JwsJoHw9ziFmJn[K'
      storePassword 'JwsJoHw9ziFmJn[K'
      storeFile file('../keystore/release.jks')
    }
  }

  productFlavors {
    prod {
      signingConfig signingConfigs.debug
      resValue "string", "app_name", "Daily Weather"
    }

    dev {
      applicationIdSuffix = ".dev"
      signingConfig signingConfigs.release
      resValue "string", "app_name", "Daily Weather Dev"
    }
  }
  buildTypes {
    debug {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
    }
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
    }
  }

  android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
      def outputFile = output.outputFile
      if (outputFile != null && outputFile.name.endsWith('.apk')) {
        def fileName = "Daily Weather_v${defaultConfig.versionName}_${releaseTime()}.apk"
        output.outputFile = new File(outputFile.parent, fileName)
      }
    }
  }
}

def releaseTime() {
  return new Date().format("yyMMdd", TimeZone.getTimeZone("UTC"))
}


dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  compile "com.android.support:appcompat-v7:$rootProject.ext.supportVersion"
  compile "com.android.support:design:$rootProject.ext.supportVersion"
  compile "com.android.support:cardview-v7:$rootProject.ext.supportVersion"
  compile "com.android.support:customtabs:$rootProject.ext.supportVersion"

  compile "com.google.firebase:firebase-database:$rootProject.ext.googleServiceVersion"

  compile "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"

  compile "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxVersion"
  compile "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxVersion"
  compile 'com.jakewharton.rxbinding2:rxbinding:2.0.0'

  compile "com.jakewharton:butterknife:$rootProject.ext.butterKnifeVersion"
  annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.ext.butterKnifeVersion"

  compile "com.google.dagger:dagger:$daggerVersion"
  annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"

  provided 'com.google.auto.value:auto-value:1.3'
  annotationProcessor 'com.jakewharton.auto.value:auto-value-annotations:1.3'

  compile "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
  compile "com.squareup.okhttp3:okhttp:$rootProject.ext.okHttpVersion"
  compile "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okHttpVersion"
  compile "com.squareup.retrofit2:adapter-rxjava2:$rootProject.ext.retrofitVersion"
  compile "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"
  compile "com.google.code.gson:gson:$rootProject.ext.gsonVersion"

  testCompile 'junit:junit:4.12'
  testCompile "org.mockito:mockito-core:2.7.0"
  testCompile "com.google.truth:truth:0.31"

  androidTestCompile "com.android.support:support-annotations:$rootProject.ext.supportVersion"
  androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
  androidTestCompile 'com.android.support.test:runner:0.5'
  androidTestCompile 'org.mockito:mockito-android:2.7.0'
  androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
}
